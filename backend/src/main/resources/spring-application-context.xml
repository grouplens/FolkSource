<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/util 
	http://www.springframework.org/schema/util/spring-util-3.0.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/jee 
	http://www.springframework.org/schema/jee/spring-jee-3.0.xsd"
	default-autowire="byName">
	<!-- ======================================================================= 
		Application Context Bootstrap File Place application level configuration 
		in this file, try and keep things with business logic associated to them 
		(like DAOs and services) outside of this file. 
		======================================================================= -->

<!-- 	<context:property-placeholder location="classpath:folksource.properties" /> -->

	<!-- <context:component-scan base-package="com.ftw"> -->
	<!-- If application startup starts to get too slow, define an exclusion -->
	<!-- filter here to prevent Spring from looking everywhere -->
	<!-- </context:component-scan> -->

	<!-- Exposing all app props via this bean -->
	<!-- any bean dynamically looking for properties should declare a setAppProperties 
		method -->
	<!-- Application specific properties for the future. -->
<!-- 	<bean id="appProperties" -->
<!-- 		class="org.springframework.beans.factory.config.PropertiesFactoryBean"> -->
<!-- 		<property name="location"> -->
<!-- 			<value>classpath:folksource.properties -->
<!-- 			</value> -->
<!-- 		</property> -->
<!-- 	</bean> -->
</beans>